name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to checkout when cutting the release."
        required: true
        default: "master"
      releaseVersion:
        description: "Release version."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Next development version."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          settings-path: ${{ github.workspace }}

      - name: Configure Git User
        run: |
          git config user.email "infinispan@infinispan.org"
          git config user.name "Infinispan"

      - name: Tag release
        run: |
          mvn -B -V versions:set-property -Dproperty=infinispan.version -DnewVersion=${{ github.event.inputs.releaseVersion }}
          mvn -B -V versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -DprocessAllModules=true versions:commit
          git commit -a -m "Releasing ${{ github.event.inputs.releaseVersion }}"
          git tag ${{ github.event.inputs.releaseVersion }}
          mvn -B -V versions:set-property -Dproperty=infinispan.version -DnewVersion=${{ github.event.inputs.developmentVersion }}
          mvn -B -V versions:set -DnewVersion=${{ github.event.inputs.developmentVersion }} -DprocessAllModules=true versions:commit
          git commit -a -m "Next version ${{ github.event.inputs.developmentVersion }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
            
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          release_name: Release ${{ github.event.inputs.releaseVersion }}
          draft: true